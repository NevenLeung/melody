"use strict";angular.module("Melody",["ui.router","ngResource","ngDialog","angularSoundManager","ngAnimate","ngSanitize","ui.bootstrap","angularAwesomeSlider","angular-sortable-view","xeditable"]).config(["$stateProvider","$urlRouterProvider","$uibTooltipProvider",function(e,t,o){o.setTriggers({mouseenter:"outsideClick"}),e.state("app",{url:"/",views:{player:{templateUrl:"views/player.html",controller:"PlayerCtrl"},header:{templateUrl:"views/header.html",controller:"HeaderCtrl"},content:{templateUrl:"views/home.html",controller:"HomeCtrl"}}}).state("app.song",{url:"song/:id",views:{"content@":{templateUrl:"views/song-info.html",controller:"SongCtrl"}}}).state("app.personal",{url:"personal",views:{"content@":{templateUrl:"views/personal-center.html",controller:"PersonalCtrl"}}}).state("app.user",{url:"user/:id",views:{"content@":{templateUrl:"views/user-info.html",controller:"UserCtrl"}}}).state("app.artist",{url:"artist/:id",views:{"content@":{templateUrl:"views/artist.html",controller:"ArtistCtrl"}}}).state("app.about",{url:"about",views:{"content@":{templateUrl:"views/about.html",controller:"AboutCtrl"}}}),t.otherwise("/")}]).run(["editableOptions",function(e){e.theme="bs3"}]),angular.module("Melody").constant("baseUrl","https://neven.cc:3443/").factory("songFactory",["$resource","baseUrl",function(e,t){return{song:e(t+"songs/:songId",null,null),comment:e(t+"songs/:songId/comments",null,null)}}]).factory("artistFactory",["$resource","baseUrl",function(e,t){return e(t+"artists/:artistId",null,null)}]).factory("userFactory",["$resource","baseUrl",function(e,t){return{user:e(t+"users/:id",null,{update:{method:"PUT"}}),favorite:e(t+"users/:id/favorites/:songID",{id:"@id",songID:"@songID"},{update:{method:"PUT"}}),register:e(t+"users/register"),login:e(t+"users/login"),logout:e(t+"users/logout")}}]).factory("localStorage",["$window",function(e){return{store:function(t,o){e.localStorage[t]=o},get:function(t,o){return e.localStorage[t]||o},remove:function(t){e.localStorage.removeItem(t)},storeObject:function(t,o){e.localStorage[t]=JSON.stringify(o)},getObject:function(t,o){return JSON.parse(e.localStorage[t]||o)}}}]).factory("favFactory",["$rootScope","localStorage","userFactory",function(e,t,o){var n={},r=[];return n.updateFavoriteList=function(n){var a=t.getObject("Token","{}").userID;-1===(r=t.getObject(a,"[]")).indexOf(n.id)?(r.push(n.id),t.storeObject(a,r),o.favorite.update({id:a,songID:n.id},{}).$promise.then(function(e){},function(e){console.log(e)}),e.$broadcast("favoriteList: Update",{operation:"add",song:n})):(r.splice(r.indexOf(n.id),1),t.storeObject(a,r),o.favorite.remove({id:a,songID:n.id}).$promise.then(function(e){},function(e){console.log(e)}),e.$broadcast("favoriteList: Update",{operation:"remove",song:n}))},n.removeAll=function(){var n=t.getObject("Token","{}").userID;t.storeObject(n,"[]"),o.favorite.remove({id:n}).$promise.then(function(e){},function(e){console.log(e)}),e.$broadcast("favoriteList: Update",{operation:"removeAll"})},n.isInFavList=function(e){var o=t.getObject("Token","{}").userID;return-1!==(r=t.getObject(o,"[]")).indexOf(e.id)},n}]).factory("AuthFactory",["$resource","$http","localStorage","$rootScope","$window","ngDialog","userFactory",function(e,t,o,n,r,a,s){function i(e){u=!0,g=e.username,f=e.Token,t.defaults.headers.common["x-access-token"]=f,function(){var e=o.getObject("Token").userID,t=o.getObject(e,"[]");s.favorite.get({id:e}).$promise.then(function(n){t.length<n.favorites.length&&(t=[],angular.forEach(n.favorites,function(e){t.push(e.songInfo._id)}),o.storeObject(e,t))})}()}var c={},l="Token",u=!1,g="",f=void 0;return function(){var e=o.getObject(l,"{}");void 0!=e.username&&i(e)}(),c.login=function(e){s.login.save(e,function(t){!function(e){o.storeObject(l,e),i(e)}({username:e.username,Token:t.token,userID:t.id,avatar:t.avatar}),n.$broadcast("login: Successful")},function(e){u=!1;var t='                        <div class="ngdialog-message">                            <div><h4>Login Unsuccessful</h4></div><div><p>'+e.data.err.name+'</p></div><div class="ngdialog-buttons">                                <button type="button" class="ngdialog-button ngdialog-button-primary" ng-click=confirm("OK")>OK</button>                            </div>                        </div>';a.openConfirm({template:t,plain:"true"})})},c.logout=function(){s.logout.get(function(e){}),f=void 0,g="",u=!1,t.defaults.headers.common["x-access-token"]=f,o.remove(l),n.$broadcast("logout: Successful")},c.register=function(e){s.register.save(e,function(t){c.login({username:e.username,password:e.password}),e.rememberMe&&o.storeObject("userinfo",{username:e.username,password:e.password}),n.$broadcast("registration: Successful")},function(e){var t='                        <div class="ngdialog-message">                            <div><h4>Registration Unsuccessful</h4></div><div><p>'+e.data.err.name+"</p></div></div>";a.openConfirm({template:t,plain:"true"})})},c.isAuthenticated=function(){return u},c.getUsername=function(){return g},c}]),angular.module("Melody").controller("PlayerCtrl",["$scope","angularPlayer","$timeout","$rootScope","songFactory","favFactory","AuthFactory","ngDialog","baseUrl",function(e,t,o,n,r,a,s,i,c){function l(){r.song.get({},function(o){for(var r={},s=0;Object.keys(r).length<5;s++)r[JSON.stringify(o.data[function(e){return Math.floor(Math.random()*e)}(o.total)])]=s;e.songs=Object.keys(r).map(function(e){return JSON.parse(e)}),angular.forEach(e.songs,function(e){e.id=e._id,e.url=c+"music/"+e.url,e.favorite=a.isInFavList(e),t.addTrack(e)}),t.play(),n.$broadcast("track:id"),e.displayInfo=!0},function(e){console.log(e)})}l(),e.playIcon='<span class="fa fa-2x fa-play player-icon"></span>',e.pauseIcon='<span class="fa fa-2x fa-pause player-icon"></span>',e.sliderOptions={from:100,to:0,step:10,vertical:!0,callback:function(e){t.adjustVolumeSlider(e)}},e.toggleFavorite=function(e){s.isAuthenticated()?(a.updateFavoriteList(e),e.favorite=a.isInFavList(e)):i.open({template:"views/loginReminder.html",className:"ngdialog-theme-default"})},n.$on("favoriteList: Update",function(t,o){"removeAll"==o.operation&&angular.forEach(e.playlist,function(e){e.favorite=!1})}),e.spinIcon=function(){t.stop(),t.setCurrentTrack(null),t.clearPlaylist(function(){}),o(l,200),e.spinner=!0,o(function(){e.spinner=!1},1e3)},n.$on("player:playlist",function(t,o){e.displayInfo=0!==o.length}),n.$on("login: Successful",function(){angular.forEach(e.playlist,function(e){e.favorite=a.isInFavList(e)})}),n.$on("logout: Successful",function(){angular.forEach(e.playlist,function(e){e.favorite=!1})})}]).controller("HeaderCtrl",["$scope","$state","ngDialog","$rootScope","baseUrl","localStorage","AuthFactory",function(e,t,o,n,r,a,s){function i(){e.username=a.getObject("Token","{}").username,e.avatar=r+"images/avatar/"+a.getObject("Token","{}").avatar,e.userID=a.getObject("Token","{}").userID}e.baseUrl=r,e.isLoggedIn=s.isAuthenticated(),i(),e.openRegisterModal=function(){o.open({template:"views/register.html",scope:e,className:"ngdialog-theme-default",controller:"RegisterCtrl"})},e.openLoginModal=function(){o.open({template:"views/login.html",scope:e,className:"ngdialog-theme-default",controller:"LoginCtrl"})},e.doLogout=function(){e.isLoggedIn=!1,s.logout()},n.$on("login: Successful",function(){i(),e.isLoggedIn=!0}),n.$on("logout: Successful",function(){t.go("app")}),e.stateIs=function(e){return t.is(e)},e.avatarList=["001.jpg","002.jpg","003.jpg","004.jpg","005.jpg"]}]).controller("LoginCtrl",["$scope","ngDialog","$rootScope","AuthFactory","localStorage",function(e,t,o,n,r){e.loginData=r.getObject("userinfo","{}"),e.doLogin=function(){e.rememberMe&&r.storeObject("userinfo",e.loginData),n.login(e.loginData),t.close()}}]).controller("RegisterCtrl",["$scope","ngDialog","$rootScope","AuthFactory",function(e,t,o,n){e.registration={},e.loginData={},e.doRegistration=function(){n.register(e.registration),t.close()}}]).controller("HomeCtrl",["$scope","angularPlayer","$rootScope","$timeout","baseUrl",function(e,t,o,n,r){function a(){n(function(){e.songID=t.currentTrackData()._id,e.musicName=t.currentTrackData().title,e.albumName=t.currentTrackData().albumName,e.albumCover=e.baseUrl+"images/album/"+t.currentTrackData().albumCover,e.singerName=t.currentTrackData().artist,e.singerID=t.currentTrackData().artistID},100)}e.baseUrl=r,a(),o.$on("track:id",function(e,t){a()}),o.$on("track:progress",function(e,t){100===parseInt(t)&&a()})}]).controller("SongCtrl",["$scope","$stateParams","angularPlayer","songFactory","AuthFactory","ngDialog","baseUrl","$http","$q",function(e,t,o,n,r,a,s,i,c){e.commentContent="click to comment!",e.currentPage=1,e.itemsPerPage=5,e.maxSize=5,e.checkComment=function(){if(!r.isAuthenticated())return a.open({template:"views/loginReminder.html",className:"ngdialog-theme-default"}),""},e.submitComment=function(){e.currentPage=Math.ceil(e.totalItems/e.itemsPerPage),e.pageChange(),n.comment.save({songId:t.id},{comment:e.commentContent},function(e){},function(e){console.log(e)})},e.pageChange=function(){n.comment.get({songId:t.id,page:e.currentPage}).$promise.then(function(t){angular.forEach(t.docs,function(e){e.postedBy.avatar=s+"images/avatar/"+e.postedBy.avatar}),e.comments=t.docs,e.totalItems=t.total},function(e){console.log(e)})},e.songID=o.currentTrackData()._id,e.musicName=o.currentTrackData().title,e.albumName=o.currentTrackData().albumName,e.albumCover=s+"images/album/"+o.currentTrackData().albumCover,e.singerName=o.currentTrackData().artist,e.singerID=o.currentTrackData().artistID;var l=c.defer();i.get(s+"songs/"+t.id+"/comments",{page:e.currentPage}).then(function(t){e.totalItems=t.data.total,e.currentPage=Math.ceil(e.totalItems/e.itemsPerPage),e.pageChange(),l.resolve()},function(e){l.reject("error")})}]).controller("PersonalCtrl",["$scope","$state","$timeout","$rootScope","baseUrl","localStorage","userFactory","favFactory","$q","$http","AuthFactory","ngDialog",function(e,t,o,n,r,a,s,i,c,l,u,g){e.favList=[],e.userInfo={};var f=a.getObject("Token","{}").userID,m=a.getObject(f,"[]");u.isAuthenticated()||(g.open({template:"views/loginReminder.html",className:"ngdialog-theme-default"}),t.go("app")),f&&s.favorite.get({id:f}).$promise.then(function(t){e.userInfo.username=t.username,e.userPhoto=r+"images/avatar/"+t.avatar,e.userInfo.introduction=t.introduction,angular.forEach(m,function(o){angular.forEach(t.favorites,function(t){o==t.songInfo._id&&(t.songInfo.id=t.songInfo._id,t.songInfo.url=r+"music/"+t.songInfo.url,e.favList.push(t.songInfo))})})},function(e){console.log(e)}),e.changeFavListOrder=function(){m=[],angular.forEach(e.favList,function(e){m.push(e._id)}),a.storeObject(f,m)},e.removeOneFromFav=function(e){i.updateFavoriteList(e)},e.removeAllFromFav=function(){i.removeAll()},e.checkUsername=function(e){if(""==e)return"Username can not be empty!";var t=c.defer();return l.put(r+"users/"+f,{username:e}).then(function(e){"200"==(e=e||{}).status&&t.resolve()},function(o){500==o.status&&t.reject("Username "+e+" has been already used!")}),t.promise},e.saveUserInfo=function(){s.user.update({id:f},e.userInfo).$promise.then(function(e){},function(e){console.log(e)})},n.$on("favoriteList: Update",function(t,o){"add"==o.operation?e.favList.push(o.song):e.favList.splice(e.favList.indexOf(o.song),1)})}]).controller("UserCtrl",["$scope","angularPlayer","$stateParams","userFactory","baseUrl",function(e,t,o,n,r){e.favList=[],n.favorite.get({id:o.id}).$promise.then(function(t){e.userName=t.username,e.userPhoto=r+"images/avatar/"+t.avatar,e.introduction=t.introduction,angular.forEach(t.favorites,function(t){t.songInfo.id=t.songInfo._id,t.songInfo.url=r+"music/"+t.songInfo.url,e.favList.push(t.songInfo)})},function(e){console.log(e)})}]).controller("ArtistCtrl",["$scope","artistFactory","$stateParams","baseUrl",function(e,t,o,n){e.baseUrl=n,t.get({artistId:o.id}).$promise.then(function(t){e.artistPhoto=e.baseUrl+"images/artist/"+t.artistPhoto,e.artistName=t.artistName,e.introduction=t.introduction.replace(/\n/g,"\n\n"),e.recommended=t.recommended},function(e){console.log(e)})}]).controller("AboutCtrl",["baseUrl","$scope",function(e,t){t.baseUrl=e}]);